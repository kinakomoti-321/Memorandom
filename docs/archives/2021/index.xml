<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2021 on MochiMochi3D</title>
    <link>https://kinakomoti-321.github.io/mochimochi3D/archives/2021/</link>
    <description>Recent content in 2021 on MochiMochi3D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 21 Oct 2021 18:41:26 +0900</lastBuildDate>
    
        <atom:link href="https://kinakomoti-321.github.io/mochimochi3D/archives/2021/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>薄レンズモデル(ThinLens Model)の実装</title>
      <link>https://kinakomoti-321.github.io/mochimochi3D/post/thinlens/thinlens/</link>
      <pubDate>Thu, 21 Oct 2021 18:41:26 +0900</pubDate>
      
      <guid>https://kinakomoti-321.github.io/mochimochi3D/post/thinlens/thinlens/</guid>
      <description>被写界深度 ピンホールカメラモデルでは所謂「ボケ」というものが存在せず、どこまで遠くの物体でもくっきりとした画像を出すことができる。しかし、現</description>
    </item>
    
    <item>
      <title>ThreejsでPathtracerを実装してみた</title>
      <link>https://kinakomoti-321.github.io/mochimochi3D/post/threejsraytracer/threejsraytracer/</link>
      <pubDate>Fri, 17 Sep 2021 22:27:11 +0900</pubDate>
      
      <guid>https://kinakomoti-321.github.io/mochimochi3D/post/threejsraytracer/threejsraytracer/</guid>
      <description>目次 Web上で動くパストレーサー ThreeJsでのダブルバッファリング OrbitCameraをshaderで使う 薄レンズモデル HDRIの実装</description>
    </item>
    
  </channel>
</rss>
